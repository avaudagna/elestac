	*************************************************************************************
	*** DOCUMENTACIÓN SOBRE PROTOCOLOS Y ESTRUCTURAS QUE VAN A SER ENVIADAS/RECIBIDAS ***
	*************************************************************************************

----------------------------------
--- SERIALIZACION - PROTOCOLOS ---
----------------------------------

/********************
*		TAMANIOS
*********************/
pid					--> 2 bytes
longCodigo		--> 4 bytes
nroPag			--> 3 bytes

/***************************************************************************
*		SWAP <--> UMC
****************************************************************************/
OPERACION                                  SERIALIZACION(UMC->SWAP)                RESPUESTA ( SWAP -> UMC)
Handhsake                          - ->    U+tamPag                            - ->    1(correcto)+cantidad_de_paginas_libres
ESCRITURA                          - ->    1+pid+numPagina+codigo              - ->    1(correcto)+cantidad_de_paginas_libres
LECTURA                            - ->    3+pid+numPagina                     - ->     char[tamanioPagina]
FINALIZACION_PROG                  - ->    4+pid                               - ->     1(correcto)+cantidad_de_paginas_libres


UMC → KERNEL 
U0|TAMAÑO PAGINA  → 7 BYTES	- HANDSHAKE

KERNEL → UMC
IDENTIFICADOR_MODULO-IDENTIFICADOR_OPERACION	TAMAÑO EN BYTES		SENTIDO
K0 – 2 BYTES - HANDSHAKE
K1 - CANTIDAD_DE_PAGINAS
K2 TAMAÑO_DEL_CODIGO "CODIGO ENTERO"

	********************************
	***ESTRUCTURAS DE INTERCAMBIO***
	********************************

------------ Estructuras entre CPU-UMC --------------
A continuar se detallan las 2 estructuras para intercambiar datos con la CPU

struct request_data{

	int pid;
	int page;
	int offset;
	int size_data;
}

struct save_data{
	
	int pid;
	int page;
   	int offset;
   	int size_data;
	void * data;
} 
