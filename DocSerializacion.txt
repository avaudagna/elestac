	*************************************************************************************
	*** DOCUMENTACIÓN SOBRE PROTOCOLOS Y ESTRUCTURAS QUE VAN A SER ENVIADAS/RECIBIDAS ***
	*************************************************************************************

----------------------------------
--- SERIALIZACION - PROTOCOLOS ---
----------------------------------

/********************
*		TAMANIOS
*********************/
pid				--> 4 bytes
tamañoDePagina	--> 4 bytes
nroPag			--> 3 bytes
stack_size  	---> 4 bytes


/***************************************************************************
*		SWAP <--> UMC
****************************************************************************/
OPERACION                                  SERIALIZACION(UMC->SWAP)                RESPUESTA ( SWAP -> UMC)
Handhsake                    - ->    U+tamPag                            - ->    1(correcto)+cantidad_de_pag_libres (5bytes)
ESCRITURA                    - ->    1+pid+numPagina+codigo              - ->    1(correcto)+cantidad_de_pag_libres (5bytes)
LECTURA                      -->    3+pid+numPagina                     -->     PID+pagina
FINALIZACION_PROG                  - ->    4+pid                               - ->     1(correcto)+cantidad_de_paginas_libres

/***************************************************************************
          UMC <--> KERNEL
***************************************************************************/ 
OPERACION 								   SERIALIZACION(KERNEL->UMC)											RESPUESTA(UMC-->KERNEL)	
HANDSHAKE 								   0+STACK_SIZE							    							TAMAÑO PAGINA (4 de pag) 
CONSULTA-PAGINAS + ENVIO				   1+PID+CANT PAGs+CODE SIZE+CODE	( 13bytes + sizecode bytes)			SI / NO (2 bytes )
FINALIZACION_PROCESO					   2+PID 																OK		



	********************************
	***ESTRUCTURAS DE INTERCAMBIO***
	********************************

------------ Estructuras entre CPU-UMC --------------
A continuar se detallan las 2 estructuras para intercambiar datos con la CPU

struct request_data{

	int pid;
	int page;
	int offset;
	int size_data;
}

struct save_data{
	
	int pid;
	int page;
   	int offset;
   	int size_data;
	void * data;
} 
