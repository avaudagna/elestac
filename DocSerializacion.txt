	*************************************************************************************
	*** DOCUMENTACIÓN SOBRE PROTOCOLOS Y ESTRUCTURAS QUE VAN A SER ENVIADAS/RECIBIDAS ***
	*************************************************************************************

----------------------------------
--- SERIALIZACION - PROTOCOLOS ---
----------------------------------

/********************
*		TAMANIOS
*********************/
pid					--> 2 bytes
longCodigo		--> 4 bytes
nroPag			--> 3 bytes

/***************************************************************************
*		SWAP <--> UMC
****************************************************************************/
OPERACION                                  SERIALIZACION(UMC->SWAP)                RESPUESTA ( SWAP -> UMC)
Handhsake                          - ->    U+tamPag                            - ->    1(correcto)+cantidad_de_paginas_libres
ESCRITURA                          - ->    1+pid+numPagina+codigo              - ->    1(correcto)+cantidad_de_paginas_libres
LECTURA                            - ->    3+pid+numPagina                     - ->     char[tamanioPagina]
FINALIZACION_PROG                  - ->    4+pid                               - ->     1(correcto)+cantidad_de_paginas_libres

/***************************************************************************
          UMC <--> KERNEL
***************************************************************************/ 
OPERACION 								   SERIALIZACION(KERNEL->UMC)				RESPUESTA(UMC-->KERNEL)				
HANDSHAKE 								   K0+STACK_SIZE							U0+TAMAÑO PAGINA (6 BYTES: UO : 2 y 4 de pagina) 
CONSULTA-PAGINAS + ENVIO				   K1+CANTIDAD_DE_PAGINAS_NECESARIAS		U1+SI / U1+NO    (4 bytes en total)
	SI SE PUEDE, ENTONCES ME EMPEZAS A ENVIAR DE A 1 PAGINA ( JUNTO AL PID).
    SI NO SE PUEDE, ENTONCES SE CIERRA LA COMUNICACION
FINALIZACION_PROCESO					   K2+PID 									U2+PID



	********************************
	***ESTRUCTURAS DE INTERCAMBIO***
	********************************

------------ Estructuras entre CPU-UMC --------------
A continuar se detallan las 2 estructuras para intercambiar datos con la CPU

struct request_data{

	int pid;
	int page;
	int offset;
	int size_data;
}

struct save_data{
	
	int pid;
	int page;
   	int offset;
   	int size_data;
	void * data;
} 
